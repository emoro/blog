<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogdown on </title>
    <link>https://estebanmoro.org/tags/blogdown/</link>
    <description>Recent content in Blogdown on </description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 01 Feb 2019 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://estebanmoro.org/tags/blogdown/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Setting up our blog with RStudio and blogdown I: Creating the blog</title>
      <link>https://estebanmoro.org/post/2019-02-02-setting-up-your-blog-with-rstudio-and-blogdown-i-creating-the-blog/</link>
      <pubDate>Fri, 01 Feb 2019 00:00:00 +0000</pubDate>
      
      <guid>https://estebanmoro.org/post/2019-02-02-setting-up-your-blog-with-rstudio-and-blogdown-i-creating-the-blog/</guid>
      <description>&lt;p&gt;Last month I migrated my blog from Wordpress to Hugo and &lt;code&gt;blogdown&lt;/code&gt;. Now I can post from RStudio using R/markdown, which allow me to create interactive posts including R code. It has been such a good experience that I decide to write down how to do it with three posts to help others.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This one about to setup the blog.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://estebanmoro.org/post/2019-02-01-setting-up-your-blog-with-rstudio-and-blogdown/&#34;&gt;Part II&lt;/a&gt; explains my workflow of creating new posts.&lt;/li&gt;
&lt;li&gt;and &lt;a href=&#34;https://estebanmoro.org/post/2019-02-04-setting-up-your-blog-with-rstudio-and-blogdown-iii-modify-your-theme/&#34;&gt;Part III&lt;/a&gt; on how to modify the theme.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;But before starting, a disclaimer: I am not a programer, designer or web developer. Just a normal user of Rstudio and blogdown. This is not a technical guide, just some notes about how I set up my blog to help other people like me. So maybe there is a simpler, cleaner and more standard way to do it. If so, comments are welcome!&lt;/p&gt;
&lt;p&gt;First let&amp;rsquo;s take a look at the different tools that we are going to use:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io&#34;&gt;Hugo&lt;/a&gt;: is a open-source framework for creating static websites. No need for a database to store our posts again (Wordpress) or to use website builders (Squarespace). The good thing about a static website is that it is much faster than other solutions. Pages are clean and download fast, which is the main reason I migrated from the bloated-pages Wordpress experience. Hugo will be the engine behind the creation of our blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://bookdown.org/yihui/blogdown/&#34;&gt;Blogdown&lt;/a&gt;: is a R package to create websites using R/markdown as our language and Hugo as our engine to render our posts into html. As you will see blogdown takes care of the Hugo part, so no need to install anything else to start your new blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rmarkdown.rstudio.com&#34;&gt;R Markdown&lt;/a&gt; We will write posts using R/markdown. If you are not familiar with this format, have a look into it. Basically a R/markdown file is a plain text file in which you have:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A YAML header at the beginning (with author, date, title, parameters, etc.) surrounded by &lt;code&gt;---&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;After that you can start typing our text, formating it using simple codes or,&lt;/li&gt;
&lt;li&gt;Introduce R code chunks whose output will be rendered in the final HTML.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;creating-the-blog&#34;&gt;Creating the blog&lt;/h2&gt;
&lt;p&gt;Creating a new blog cannot be easier. Before starting this is what we need:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;em&gt;RStudio and the blogdown package&lt;/em&gt;:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;install.packages&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blogdown&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;&lt;em&gt;Choose a theme&lt;/em&gt;. Yes, you have &lt;a href=&#34;https://themes.gohugo.io&#34;&gt;many themes&lt;/a&gt; in Hugo. And believe me, this &lt;strong&gt;step is crucial&lt;/strong&gt;, because you are going invest some time to organize our posts, the look of the theme, etc. Creating the new blog could be just 5 minutes, but modifying the theme and adapting our content to it can take weeks. So you might want to spend some time figuring out what theme is best for you. In my case, here are some themes that I considered:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://themes.gohugo.io/academic/&#34;&gt;Academic&lt;/a&gt;: If you are in academia this is probably the best theme for you. It is well documented, contains some extensions and a lot of people are using it, so there is a whole community behind it. But it takes a lot of work to adapt the content to it, specially if you have a lot of papers, talks, posts, etc. or you are coming from another platform like Wordpress. This is why I didn&amp;rsquo;t chose it.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://themes.gohugo.io/hugo-tranquilpeak-theme/&#34;&gt;Tranquilpeak&lt;/a&gt;: This is a great simple theme. It is easy customizable. This is a good option if you have a list of posts and what to set up a beautiful and simple blog.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://themes.gohugo.io/hugo-casper-two/&#34;&gt;Casper Two&lt;/a&gt;: Casper Two is a personal blogging theme. It is beautiful and simple and it was by choice, since it looked similar to my previous Wordpress theme (which I did like).&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once you have decide the theme is important to locate its repository. Look for the &lt;code&gt;Homepage&lt;/code&gt; button in the Theme page you like. Here is the one for Casper-two:&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://estebanmoro.org/img/posts/casper-two-homepage.png&#34; alt=&#34;&#34;&gt;{width=80%}&lt;/p&gt;
&lt;p&gt;As you can see in the top left corner of the webpage, the repository for this theme is maintained by &lt;code&gt;eueung&lt;/code&gt; in the folder &lt;code&gt;hugo-casper-two&lt;/code&gt;. So write it down or copy that as &lt;code&gt;eueung/hugo-casper-two&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Once you have chosen the theme, we are ready to go in 3 simple steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Open a new project in RStudio: File → New Project  → New Directory  → Website using Blogdown&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://estebanmoro.org/img/posts/new_blog_project.png&#34; alt=&#34;&#34;&gt;{width=60%}&lt;/p&gt;
&lt;p&gt;In the next window, specify the directory name of the blog, the subdirectory where the blog is going to be place and the theme. Here is what it looks in my case&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://estebanmoro.org/img/posts/new_blog_ever.png&#34; alt=&#34;&#34;&gt;{width=60%}&lt;/p&gt;
&lt;p&gt;Hit the &lt;code&gt;Create Project&lt;/code&gt; and you are done! You have just created your fist blog.&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;The fist thing you will see in Rstudio is the &lt;code&gt;config.toml&lt;/code&gt; file containing all the parameters to setup the blog. At this point:&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Change you &lt;code&gt;baseurl&lt;/code&gt; to be the final one. In my case is &lt;code&gt;baseurl = &amp;quot;http://estebanmoro.org&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;You can also change the &lt;code&gt;title&lt;/code&gt;, &lt;code&gt;subtitle&lt;/code&gt;, &lt;code&gt;description&lt;/code&gt; etc.&lt;/li&gt;
&lt;li&gt;Use your Google analytics code (&lt;code&gt;googleAnalytics = &amp;quot;&amp;quot;&lt;/code&gt;) and your disqus shortname (&lt;code&gt;disqusShortname = &amp;quot;&amp;quot;&lt;/code&gt;) to add analytics and comments to our blog. Here is a &lt;a href=&#34;https://notes.peter-baumgartner.net/tutorial/how-to-install-disqus-on-hugo/&#34;&gt;nice post&lt;/a&gt; by Peter Baumgartner about how to install disqus on Hugo.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;Let&amp;rsquo;s build the blog! You can do it one-time using&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blogdown&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hugo_build&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;or interactively using&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blogdown&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;serve_site&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In the latter case, a server is running underneath so everytime you edit/change a post, put a new image in &lt;code&gt;/img&lt;/code&gt; (see below) or the modify the &lt;code&gt;config.toml&lt;/code&gt;, the site is rebuilt by Hugo. Also the blog appears in the viewer pane. This is the best way if you are creating a new post or modifying the theme.&lt;/p&gt;
&lt;p&gt;If didn&amp;rsquo;t set it before, blogdown has also installed some post examples so you can have an idea of how it looks like.&lt;/p&gt;
&lt;h2 id=&#34;understanding-the-blog-directory-structure&#34;&gt;Understanding the blog directory structure&lt;/h2&gt;
&lt;p&gt;Before starting to post to our new blog, let&amp;rsquo;s have a look at the directory structure that has been created. In my case, I created the blog in &lt;code&gt;~/best_blog_ever&lt;/code&gt; which looks like this&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://estebanmoro.org/img/posts/folder-structure.png&#34; alt=&#34;&#34;&gt;{width=80%}&lt;/p&gt;
&lt;p&gt;The first file &lt;code&gt;best_blog_ever.Rproj&lt;/code&gt; is the blog project we have just created. All the new posts go into the &lt;code&gt;content/post&lt;/code&gt; folder. You can see there that already we have a number of them. They are in the markdown format (&lt;code&gt;.md&lt;/code&gt;) and there is one in the R markdown format (&lt;code&gt;.Rmd&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;You also have a folder named &lt;code&gt;static&lt;/code&gt;. Think of it as the root folder for the new blog. That means that if there is file there named &lt;code&gt;cv.pdf&lt;/code&gt; it can be access as &lt;code&gt;http:/estebanmoro.org/cv.pdf&lt;/code&gt;. The folder &lt;code&gt;img&lt;/code&gt; is the perfect place to put our images/pictures. For example, if there is a file &lt;code&gt;picture_vacations.png&lt;/code&gt; in the &lt;code&gt;img&lt;/code&gt; folder, you can include it in our markdown post using&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;![](/img/picture_vacations.png)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;When Hugo builds the blog, the final html files and structure go into the &lt;code&gt;public&lt;/code&gt; folder. This is the static version of the blog and the one we will deploy to our domain.&lt;/p&gt;
&lt;p&gt;Finally the folder &lt;code&gt;themes&lt;/code&gt; contains all the formating for the new theme. I don&amp;rsquo;t recommend to touch it unless you really know what you are doing. We will see in Part III how to modify the theme.&lt;/p&gt;
&lt;h2 id=&#34;migrating-our-content&#34;&gt;Migrating our content&lt;/h2&gt;
&lt;p&gt;I had a lot of posts in my previous Wordpress blog and didn&amp;rsquo;t want to lose them. Luckily there are &lt;a href=&#34;https://gohugo.io/tools/migrations/&#34;&gt;some tools&lt;/a&gt; to migrate your posts from Wordpress to Hugo. I chose &lt;code&gt;exitwp&lt;/code&gt;:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Download &lt;code&gt;exitwp&lt;/code&gt; by cloning or downloading the zip file of the &lt;a href=&#34;https://github.com/wooni005/exitwp-for-hugo&#34;&gt;repo&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Export your Wordpress blog using xml. To do this, access the admin of our Wordpress blog (MySite -&amp;gt; Settintg -&amp;gt; Export) and export all. &lt;a href=&#34;https://en.support.wordpress.com/export/&#34;&gt;Here&lt;/a&gt; is a guide that shows you how to do it.&lt;/li&gt;
&lt;li&gt;Put our Wordpress &lt;code&gt;xml&lt;/code&gt; file in the &lt;code&gt;wordpress-xml&lt;/code&gt; folder of our &lt;code&gt;exitwp&lt;/code&gt; directory.&lt;/li&gt;
&lt;li&gt;Edit the &lt;code&gt;config.yaml&lt;/code&gt; file to change our setups for the migration. For example, you can change the directory where the migrated posts are going to be created by changing the &lt;code&gt;build_dir&lt;/code&gt; parameter.&lt;/li&gt;
&lt;li&gt;Run it by typing &lt;code&gt;./exitwp.py&lt;/code&gt; in the console from the directory of the unzipped archive.&lt;/li&gt;
&lt;li&gt;If everything went well you will have a new &lt;code&gt;build&lt;/code&gt; directory with all the posts in markdown format. Select the ones you want to keep and move them to the &lt;code&gt;content/post&lt;/code&gt; folder of our blog. Depending on our old blog structure you might also have other files in the &lt;code&gt;build&lt;/code&gt; directory.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;deploying-the-blog&#34;&gt;Deploying the blog&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;CAUTION: we are going to overwrite the blog in our actual domain, so before proceeding, make a backup of it or export it as explained before.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Now we are ready to deploy it to our new domain. Here is the commands in RStudio that I have to do it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-r&#34; data-lang=&#34;r&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;system&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rm -r ~/best_blog_ever/public/*&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blogdown&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hugo_build&lt;/span&gt;(local&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;F)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;system&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;~/best_blog_ever/deploy.sh&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The fist command simply erases the &lt;code&gt;public&lt;/code&gt; directory where the new version of the blog is going to be built. This is probably not needed, but it gives me peace of mind :).&lt;/p&gt;
&lt;p&gt;The second command builds the blog. Note the &lt;code&gt;local=F&lt;/code&gt; flag which tells Hugo to build a deployment version of the blog, meaning that all the posts with &lt;code&gt;draft: true&lt;/code&gt; in the YAML will not be rendered. This will be explained better in &lt;a href=&#34;https://estebanmoro.org/posts/2019-02-01-setting-up-your-blog-with-rstudio-and-blogdown/&#34;&gt;Part II&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The third command is my personal deployment script. Although most of the &lt;a href=&#34;https://bookdown.org/yihui/blogdown/deployment.html&#34;&gt;guides out there&lt;/a&gt; show you how to deploy your new blog using &lt;a href=&#34;https://www.netlify.com&#34;&gt;Netlify&lt;/a&gt; and/or GitHub, I am using my own domain and space at Dreamhost. Then to update my blog I simply synchronize the &lt;code&gt;public&lt;/code&gt; directory with the root directory of my domain. Here is the &lt;code&gt;deploy.sh&lt;/code&gt; script&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#!/bin/sh 
USER=your_user_to_our_blog_domain
HOST=your_dream_host_machine.dreamhost.com
DIR=our_blog_domain/
rsync -avz --exclude-from &amp;#39;exclude-list.txt&amp;#39; --delete public/ ${USER}@${HOST}:~/${DIR}
exit 0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Change your &lt;code&gt;your_user_to_our_blog_domain&lt;/code&gt; and &lt;code&gt;your_dream_host_machine&lt;/code&gt; to your own dreamhost user and machine. The synchronization is down using &lt;code&gt;rysnc&lt;/code&gt;. You might also notice that I have excluded some files in the synchronization which are specified in the file &lt;code&gt;exclude-list.txt&lt;/code&gt;. In my case I only have the &lt;code&gt;.htacces&lt;/code&gt; file there.&lt;/p&gt;
&lt;p&gt;And that&amp;rsquo;s it. If everything went well, you have migrated your blog from Wordpress to blogdown in no time.&lt;/p&gt;
&lt;h2 id=&#34;comments&#34;&gt;Comments&lt;/h2&gt;
&lt;p&gt;Although I love blogdown and how fast is to built and create new content, there is a couple of things that you might consider before using blogdown for our blog:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;No search:&lt;/strong&gt; The content generated is static. That means that you have lost the possibility for the users to search your content. In most Hugo themes there is no &amp;ldquo;search&amp;rdquo; button. There is however &lt;a href=&#34;https://gohugo.io/tools/search/&#34;&gt;a possibility&lt;/a&gt; to implement searching in our blog using search engines like &lt;code&gt;lunr&lt;/code&gt; or &lt;code&gt;angolia&lt;/code&gt;. But my experience is that those are difficult to implement. If searching within your blog is crucial, look for a theme that have &lt;a href=&#34;https://themes.gohugo.io/tags/search/&#34;&gt;search already implemented&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Permalinks structure and slugs:&lt;/strong&gt; you don&amp;rsquo;t want to lose the backlinks to your old blog. Have a look a the permalink structure in your older Wordpress blog. In my case a typical post had this structure:&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;http://estebanmoro.org/2016/02/more-people-more-fun-the-scaling-of-events-in-cities/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;so the &lt;code&gt;slug&lt;/code&gt; for that particular post was &lt;code&gt;2016/02/more-people-more-fun-the-scaling-of-events-in-cities/&lt;/code&gt;. Most likely, &lt;code&gt;exitwp&lt;/code&gt; has put our old &lt;code&gt;slug&lt;/code&gt; (the URL valid name for our post) in each of the new markdown post&amp;rsquo;s YAML, so there is no need to change anything. But check it just in case. Specially for those posts in your blog that have a lot of backlinks.&lt;/p&gt;
&lt;p&gt;If you want to keep that format for the permalinks for new posts, modify the &lt;code&gt;[permalinks]&lt;/code&gt; parameter in the &lt;code&gt;config.toml&lt;/code&gt; accordingly.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>